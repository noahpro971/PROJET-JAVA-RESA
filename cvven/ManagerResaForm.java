
package hotel.cvven;

import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.DataFormatException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ManagerResaForm extends javax.swing.JFrame {

     RESA reservation = new RESA();
    public ManagerResaForm() {
        initComponents();
        reservation.fillReservationsJTable(jTable1);
        
        jTable1.setRowHeight(25);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonAddReservation = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButtonEditReservation = new javax.swing.JButton();
        jTextFieldReservationID = new javax.swing.JTextField();
        jButtonRemoveReservation = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButtonClearFields = new javax.swing.JButton();
        jTextFieldClientID = new javax.swing.JTextField();
        jButton_Refresh_JTable_Data = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldRoomNumber = new javax.swing.JTextField();
        jDateChooserDateDebut = new com.toedter.calendar.JDateChooser();
        jDateChooserDateFin = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Date Debut");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Date Sortie");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID de reservation", "ID client", "Numero de chambre", "Date de début", "Date de fin"
            }
        )
        // make the jtable cells not editable
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jTable1.setColumnSelectionAllowed(true);
    jTable1.setGridColor(new java.awt.Color(255, 255, 0));
    jTable1.setSelectionBackground(new java.awt.Color(0, 153, 0));
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);
    jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    jPanel2.setBackground(new java.awt.Color(7, 76, 180));

    jLabel1.setFont(new java.awt.Font("Tahoma", 0, 44)); // NOI18N
    jLabel1.setForeground(new java.awt.Color(255, 255, 255));
    jLabel1.setText("Gérer les réservations");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(332, 332, 332)
            .addComponent(jLabel1)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
            .addContainerGap())
    );

    jButtonAddReservation.setBackground(new java.awt.Color(255, 255, 0));
    jButtonAddReservation.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
    jButtonAddReservation.setText("Ajouter une réservation");
    jButtonAddReservation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButtonAddReservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonAddReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonAddReservationActionPerformed(evt);
        }
    });

    jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jLabel2.setText("ID:");

    jButtonEditReservation.setBackground(new java.awt.Color(255, 255, 0));
    jButtonEditReservation.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
    jButtonEditReservation.setText("Modifier réservation");
    jButtonEditReservation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButtonEditReservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonEditReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonEditReservationActionPerformed(evt);
        }
    });

    jTextFieldReservationID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

    jButtonRemoveReservation.setBackground(new java.awt.Color(255, 255, 0));
    jButtonRemoveReservation.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
    jButtonRemoveReservation.setText("Supprimer réservation");
    jButtonRemoveReservation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButtonRemoveReservation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonRemoveReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonRemoveReservationActionPerformed(evt);
        }
    });

    jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jLabel3.setText("Client Id:");

    jButtonClearFields.setBackground(new java.awt.Color(255, 0, 0));
    jButtonClearFields.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
    jButtonClearFields.setForeground(new java.awt.Color(255, 255, 255));
    jButtonClearFields.setText("Effacer les champs");
    jButtonClearFields.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    jButtonClearFields.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonClearFields.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButtonClearFieldsActionPerformed(evt);
        }
    });

    jTextFieldClientID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jTextFieldClientID.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextFieldClientIDActionPerformed(evt);
        }
    });

    jButton_Refresh_JTable_Data.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jButton_Refresh_JTable_Data.setText("Rafraichir");
    jButton_Refresh_JTable_Data.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton_Refresh_JTable_DataActionPerformed(evt);
        }
    });

    jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jLabel4.setText("Numero de chambre");

    jTextFieldRoomNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

    jDateChooserDateDebut.setDateFormatString("yyyy-MM-dd");

    jDateChooserDateFin.setDateFormatString("yyyy-MM-dd");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldReservationID, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(jDateChooserDateDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(222, 222, 222)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAddReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEditReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRemoveReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooserDateFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(216, 216, 216)))
                        .addGap(6, 6, 6)))
                .addComponent(jButtonClearFields, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jButton_Refresh_JTable_Data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE))
            .addGap(23, 23, 23))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(41, 41, 41)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextFieldReservationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTextFieldRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jDateChooserDateDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(jDateChooserDateFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(68, 68, 68)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonAddReservation, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addComponent(jButtonEditReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRemoveReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addComponent(jButtonClearFields, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton_Refresh_JTable_Data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        // display the selected row data in the jtextfields

        // get the jtabel model
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();

        // get the selected row index
        int rIndex = jTable1.getSelectedRow();

        // display data
        jTextFieldReservationID.setText(model.getValueAt(rIndex, 0).toString());
        jTextFieldClientID.setText(model.getValueAt(rIndex, 1).toString());
        jTextFieldRoomNumber.setText(model.getValueAt(rIndex, 2).toString());

        // display the dateIN & dateOUT from jtable to jdatechooser
        try {

            Date dateDebut = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rIndex, 3).toString());
            jDateChooserDateDebut.setDate(dateDebut);

            Date dateFin = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(rIndex, 4).toString());
            jDateChooserDateFin.setDate(dateFin);

        } catch (ParseException ex) {
            Logger.getLogger(ManagerResaForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonAddReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddReservationActionPerformed

        try{
            String reservant = String.valueOf(jTextFieldClientID.getText());
            int num_chambre = Integer.valueOf(jTextFieldRoomNumber.getText());
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dateDebut = dateFormat.format(jDateChooserDateDebut.getDate());
            String dateFin = dateFormat.format(jDateChooserDateFin.getDate());
            String toDayDate = dateFormat.format(new Date());

            Date din = dateFormat.parse(dateDebut);
            Date dout = dateFormat.parse(dateFin);
            Date tdd  = dateFormat.parse(toDayDate);

            // if the dateDebut is before or not equal to today date
            if(!(din.after(tdd) || din.equals(tdd)))
            {

                JOptionPane.showMessageDialog(rootPane, "La date de debut doit etre egale ou avant la date de fin", " Erreur Date debut", JOptionPane.ERROR_MESSAGE);

            }

            // if the dateFin is before dateDebut or not equal to dateDebut
            else if(!(dout.after(din) || dout.equals(din)))
            {
                JOptionPane.showMessageDialog(rootPane, "La date de fin doit etre egale ou apres la date de debut ", "Erreur date fin", JOptionPane.ERROR_MESSAGE);
            }
            // if everything is ok
            else{
                if(reservation.ajouterReservation(reservant, num_chambre, dateDebut, dateFin))
                {
                    JOptionPane.showMessageDialog(rootPane, "La réservation a bien été ajoutée.", "ajout de réservation", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "La réservation n'a pas été ajoutée.", "Erreur ajout de réservation", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() + " Entrez le numero de la chambre + ID du client", "Erreur dans les champs", JOptionPane.ERROR_MESSAGE);
        }
        catch (ParseException ex) {
            Logger.getLogger(ManagerResaForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonAddReservationActionPerformed

    private void jButtonEditReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditReservationActionPerformed

        // edit the selected reservation

        try{
            // get data from the fields
            int reservationId = Integer.valueOf(jTextFieldReservationID.getText());
            int roomNumber = Integer.valueOf(jTextFieldRoomNumber.getText());
            String nom_reservant = String.valueOf(jTextFieldClientID.getText());

            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dateDebut = dateFormat.format(jDateChooserDateDebut.getDate());
            String dateFin = dateFormat.format(jDateChooserDateFin.getDate());

            String toDayDate = dateFormat.format(new Date());

            Date din = dateFormat.parse(dateDebut);
            Date dout = dateFormat.parse(dateFin);
            Date tdd  = dateFormat.parse(toDayDate);

            
            if(!(din.after(tdd) || din.equals(tdd)))
            {

                JOptionPane.showMessageDialog(rootPane, "La date de debut doit-etre aujourd'hui ou apres aujourd'hui", " Erreur Date debut ", JOptionPane.ERROR_MESSAGE);

            }

           
            else if(!(dout.after(din) || dout.equals(din)))
            {
                JOptionPane.showMessageDialog(rootPane, "LA date de fin doit etre egale ou apres la date de debut", "Erreur Date fin", JOptionPane.ERROR_MESSAGE);
            }
            // if everything is ok
            else{
                if(reservation.editReservation(reservationId, nom_reservant, roomNumber, dateDebut, dateFin))
                {
                    JOptionPane.showMessageDialog(rootPane, "Les informations de modifications ont bien été mises à jour", "Edit Reservation reussie", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Les informations de reservations n'ont pas été mises a jours", "Erreur Edit Reservation ", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() + " - Entrez le numero de chambre + l'ID client + ID de la reservation", "Data erreur", JOptionPane.ERROR_MESSAGE);
        }
        catch(NullPointerException ex)
        {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() + " - Choisir la date de debut & de fin", "Date Erreur", JOptionPane.ERROR_MESSAGE);
        }
        catch (ParseException ex) {
            Logger.getLogger(ManagerResaForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonEditReservationActionPerformed

    private void jButtonRemoveReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveReservationActionPerformed

        // delete the selected room
        try{
            int reservationId = Integer.valueOf(jTextFieldReservationID.getText());

            if(reservation.supprimerReservation(reservationId))
            {
                JOptionPane.showMessageDialog(rootPane, "La reservation a bien été supprimée", "Supprime resa", JOptionPane.INFORMATION_MESSAGE);
            }

            else{

                JOptionPane.showMessageDialog(rootPane, "la réservation n'a pas été supprimée", "supprime pas resa", JOptionPane.ERROR_MESSAGE);
            }

        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage() + " - Entrez l'iD de la réservation", "Erreur id resa", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonRemoveReservationActionPerformed

    private void jButtonClearFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearFieldsActionPerformed

        // remove text from all jtextfields
        jTextFieldClientID.setText("");
        jTextFieldReservationID.setText("");
        jTextFieldRoomNumber.setText("");

        // remove date from jdatechooser
        // if you want to set the date to the current day use new Date instead of null
        jDateChooserDateDebut.setDate(null);
        jDateChooserDateFin.setDate(null);

    }//GEN-LAST:event_jButtonClearFieldsActionPerformed

    private void jButton_Refresh_JTable_DataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Refresh_JTable_DataActionPerformed

        // clear the jtable first
        jTable1.setModel(new DefaultTableModel(null, new Object[]{"Reservation ID", "Client ID", "numero_chambre", "Date Debut", "Date Fin"}));

        // populate the jtable
        reservation.fillReservationsJTable(jTable1);
    }//GEN-LAST:event_jButton_Refresh_JTable_DataActionPerformed

    private void jTextFieldClientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldClientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldClientIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
            try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerResaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerResaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerResaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerResaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerResaForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddReservation;
    private javax.swing.JButton jButtonClearFields;
    private javax.swing.JButton jButtonEditReservation;
    private javax.swing.JButton jButtonRemoveReservation;
    private javax.swing.JButton jButton_Refresh_JTable_Data;
    private com.toedter.calendar.JDateChooser jDateChooserDateDebut;
    private com.toedter.calendar.JDateChooser jDateChooserDateFin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldClientID;
    private javax.swing.JTextField jTextFieldReservationID;
    private javax.swing.JTextField jTextFieldRoomNumber;
    // End of variables declaration//GEN-END:variables
}
